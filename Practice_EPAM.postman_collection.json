{
	"info": {
		"_postman_id": "c33ad243-ab3a-4359-8ac1-d3fdf739bd7b",
		"name": "Practice EPAM Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fad9a972-b370-4004-8a61-43b95c7f815c",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"Login\": \"TokiriMirel\",\r\n  \"NativeName\": \"Tokiri Mirel\",\r\n  \"Password\": \"zxc123456\",\r\n  \"ConfirmPassword\": \"zxc123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://104.40.150.146/api/user\n",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"user\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get information about current user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bdfac123-8425-4e52-8659-17a3c28c2d1b",
						"exec": [
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\",\"login\",\"nativeName\",\"role\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://104.40.150.146/api/me\n",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"me\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "393a8bee-1cba-4f58-8f00-8ab15b0070e5",
						"exec": [
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"NativeName\": \"Tokiri Mirel\",\r\n  \"Role\": 1,\r\n  \"OldPassword\": \"123456\",\r\n  \"Password\": \"123456789\",\r\n  \"ConfirmPassword\": \"123456789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://104.40.150.146/api/user/{{id}}\n",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"user",
						"{{id}}\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get information about user by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a6fe03e7-35e6-46b4-a48c-6aee58bfd226",
						"exec": [
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\",\"login\",\"nativeName\",\"role\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://104.40.150.146/api/user/{{id}}\n",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"user",
						"{{id}}\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all maps (map)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "649fd907-4bbb-4590-a144-6131bf56f6f1",
						"exec": [
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\",\"name\",\"owner\",\"width\",\"height\",\"policeCount\",\"thiefCount\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://104.40.150.146/api/map\n",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"map\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create game",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3ad9a48-4f50-426a-8d88-ad2f77012b23",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\",\"name\",\"owner\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"Name\": \"Test_game1\",\r\n  \"MapId\": \"f61baece2e34478fa347085d66c01214\",\r\n  \"SwitchTimeout\": 0,\r\n  \"StartupTeamLives\": 0,\r\n  \"PoliceSpeed\": 0,\r\n  \"ThiefSpeed\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://104.40.150.146/api/game\n",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"game\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete game by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15974120-e69d-4299-b95c-911928d79ca7",
						"exec": [
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://104.40.150.146/api/game/{{DelgameID}}",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"game",
						"{{DelgameID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all maps (maps)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9049fbfb-6e4b-4874-ba66-a2ad5bdb8621",
						"exec": [
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\",\"name\",\"owner\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://104.40.150.146/api/maps\n",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"maps\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all maps by user ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5fe838da-7a61-4e74-8e21-2e8f0aa7b27c",
						"exec": [
							"\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://104.40.150.146/api/user/{{id}}/maps",
					"protocol": "http",
					"host": [
						"104",
						"40",
						"150",
						"146"
					],
					"path": [
						"api",
						"user",
						"{{id}}",
						"maps"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}